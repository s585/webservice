###

POST {{host}}/api/auth/registration
Content-Type: application/json

{
  "login": "admin",
  "password": "password"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json", "Response Content-Type is not application/json");
});
%}

###

###

POST {{host}}/api/auth/registration
Content-Type: application/json

{
  "login": "admin123",
  "password": "password"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json", "Response Content-Type is not application/json");
});
%}

###

POST {{host}}/api/auth/login
Content-Type: application/json

{
  "login": "admin",
  "password": "password"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json", "Response Content-Type is not application/json");
  client.global.set("token", response.body.token);
});
%}

### Access with Token
# 1. Request Line (не особо безопасно)
# 2. Headers:
# Authorization
# X-Token <- (X-deprecated), Token
# Cookie
# 3. Body (GET)

GET {{host}}/api/users/all
Authorization: {{token}}

###

GET {{host}}/api/users/all
